# -*- coding: utf-8 -*-
from __future__ import print_function
from pprint import pprint
from messente_api import OmnimessageApi, SMS, Omnimessage, Configuration, ApiClient
from messente_api.rest import ApiException
import telebot
import datetime
from telebot import types, apihelper
import sqlite3
import config
import random
import time
import json
from light_qiwi import Qiwi, OperationType
import keyboards
import requests
import transliterate
import sys

configuration = Configuration()
configuration.username = "63ea746bfc3449b2a1c7a88866cd11e9"
configuration.password = "ea6813327c16427cb9c910306e963c3b"

api_instance = OmnimessageApi(ApiClient(configuration))

number_send_sms = '+79950104458'
id_compani_prozvon = '1690659919'
api_prozvon = 'e2637e021c1238f6f481f9b6cc0ace36'


clck_url = 'https://clck.ru/--?url='
clck_url_2 = 'https://uni.su/api/?url='
clck_url_3 = 'https://is.gd/create.php?format=simple&url='
clck_url_4 = 'https://v.gd/create.php?format=simple&url='

# create an instance of the API class

bot = telebot.TeleBot(config.bot_token)

bot2 = telebot.TeleBot(config.bot_token)


@bot.message_handler(commands=['start'])
def start_message(message):
	userid = str(message.chat.id)
	username = str(message.from_user.username)
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	q = q.execute('SELECT * FROM ugc_users WHERE id IS '+str(userid))
	row = q.fetchone()
	if row is None:
		q.execute("INSERT INTO ugc_users (id,name,balans,ref,ref_colvo,rules,rules_1,statys) VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')"%(userid,username,'0','0','0','12','20','–ê–∫—Ç–∏–≤–µ–Ω'))
		connection.commit()
		if message.text[7:] != '':
			if message.text[7:] != userid:
				q.execute("update ugc_users set ref = " + str(message.text[7:])+ " where id = " + str(userid))
				connection.commit()
				q.execute("update ugc_users set ref_colvo =ref_colvo + 1 where id = " + str(message.text[7:]))
				connection.commit()
				bot.send_message(message.text[7:], f'–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML')
		msg = bot.send_message(message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		if row[3] == '0':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT * FROM reklama")
			row = q.fetchall()
			#text = ''
			#keyboard = types.InlineKeyboardMarkup()
			#for i in row:
	#			text = f'{text}<a href="{i[2]}">{i[1]}</a>\n‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ\n'
#			keyboard.add(types.InlineKeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='buy_reklama'))
#			bot.send_message(message.chat.id, f'''<b>üíé –†–µ–∫–ª–∞–º–∞:</b>

#{text}
#''' ,parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)
			bot.send_message(message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)
		else:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT * FROM reklama")
			row = q.fetchall()
			#text = ''
			#keyboard = types.InlineKeyboardMarkup()
			#for i in row:
				#text = f'{text}<a href="{i[2]}">{i[1]}</a>\n‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ\n'
			#keyboard.add(types.InlineKeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='buy_reklama'))
			#bot.send_message(message.chat.id, f'''<b>üíé –†–µ–∫–ª–∞–º–∞:</b>

#{text}
#''' ,parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)
			bot.send_message(message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)

@bot.message_handler(content_types=['text'])
def send_text(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	q = q.execute(f'SELECT statys FROM ugc_users WHERE id = {message.chat.id}')
	botb = q.fetchone()
	if botb[0] == '–ê–∫—Ç–∏–≤–µ–Ω':

		if message.text.lower() == '/admin':
			if message.chat.id == config.admin:

				msg = bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
		elif message.text.lower() == '–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ:\n\n–°–µ—Ä–≤–∏—Å\n\n–¢–µ–∫—Å—Ç —Å–º—Å</b>\n\n<i>–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤:</i> <code>avito</code>,<code>avito_2</code>,<code>youla</code>,<code>youla_2</code>,<code>tk</code>,<code>tk_2</code>,',parse_mode='HTML',reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, new_nametovars)

		elif message.text.lower() == '—É–¥–∞–ª–µ–Ω–∏–µ':
			if message.chat.id == config.admin:
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("SELECT * FROM sms")
				row = q.fetchall()
				q.close()
				text = ''
				for i in row:
					text = f'{text}id: <code>{i[0]}</code>| –¢–µ–∫—Å—Ç —Å–æ–æ–±—à–µ–Ω–∏—è: <code>{i[2]}</code>\n'
				msg = bot.send_message(message.chat.id, f'<b>–í–≤–µ–¥–∏—Ç–µ ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è</b>\n\n<i>–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤:</i>\n{text}',parse_mode='HTML',reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, del_sms)

		
		elif message.text.lower() == '–¥–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, add_money1)

		elif message.text.lower() == '—Å–Ω—è—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, remove_money1)

		elif message.text.lower() == '–∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–π—Å':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, edit_prace)

		elif message.text.lower() == '–∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, new_hellotext)

		elif message.text.lower() == '–∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, new_phone)

		elif message.text.lower() == '–∏–∑–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, new_token)

		elif message.text.lower() == '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
			if message.chat.id == config.admin:
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',callback_data='admin_search_user'))
				bot.send_message(message.chat.id, '<b>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É</b>',parse_mode='HTML', reply_markup=keyboard)

		elif message.text.lower() == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
			if message.chat.id == config.admin:
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("SELECT qiwi_phone FROM config  where id = "+str(1))
				qiwi_phone = q.fetchone()
				q.execute("SELECT qiwi_token FROM config  where id = "+str(1))
				qiwi_token = q.fetchone()
				q.execute("SELECT rules FROM ugc_users  where id = "+str(1031811029))
				rules = q.fetchone()
				q.execute("SELECT rules_1 FROM ugc_users  where id = "+str(1031811029))
				rules_1 = q.fetchone()
				q.execute("SELECT rules FROM config  where id = "+str(1))
				prace_smska = q.fetchone()

				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–π—Å —Å–º—Å',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å—Ü–µ–Ω–∞—Å–º—Å_'),types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–π—Å –ø—Ä–æ–∑–≤–æ–Ω–∞',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å—Ü–µ–Ω–∞–ø—Ä–æ–∑–≤–æ–Ω_'))
				keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä QIWI',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å–Ω–æ–º–µ—Ä_'),types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å Token QIWI',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å—Ç–æ–∫–µ–Ω_'))
				keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–π—Å –ø—Ä–∏–µ–º–∞ —Å–º—Å',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–∞–π—Å–ø—Ä–∏–µ–º–∞—Å–º—Å'),types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å API',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å_api'))
				bot.send_message(message.chat.id, f'''<i>–ù–æ–º–µ—Ä QIWI:</i> <code>{qiwi_phone[0]}</code>
<i>–¢–æ–∫–µ–Ω QIWI:</i> <code>{qiwi_token[0]}</code>
<i>–ü—Ä–∞–π—Å —Å–º—Å:</i> <code>{rules[0]}</code>
<i>–ü—Ä–∞–π—Å –ø—Ä–∏–µ–º–∞ —Å–º—Å:</i> <code>{prace_smska[0]}</code>
<i>–ü—Ä–∞–π—Å –ø—Ä–æ–∑–≤–æ–Ω–∞:</i> <code>{rules_1[0]}</code>''',parse_mode='HTML', reply_markup=keyboard)




		elif message.text.lower() == '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
			if message.chat.id == config.admin:
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				now = datetime.datetime.now()
				tt = now.strftime('%d.%m.%Y')
				ttm = now.strftime('%m.%Y')
				# –•—É–π–Ω—è –±–µ—Ä—É—â–∞—è—Å—è –∏–∑ –±–∞–∑—ã: –∫–æ–ª-–≤–æ, —Å—É–º–º—ã
				count_users= q.execute(f"SELECT count(id) from ugc_users").fetchone()[0]
				count_buys_segodna = q.execute(f"SELECT count(id) from ugc_buys WHERE date LIKE '%{tt}%'").fetchone()[0]
				count_earn_segodna = q.execute(f"SELECT sum(price) from ugc_buys WHERE date LIKE '%{tt}%'").fetchone()[0]
				count_buys_month = q.execute(f"SELECT count(id) from ugc_buys WHERE date LIKE '%{ttm}%'").fetchone()[0]
				count_earn_month = q.execute(f"SELECT sum(price) from ugc_buys WHERE date LIKE '%{ttm}%'").fetchone()[0]
				vsego = q.execute(f"SELECT count(id) from ugc_buys").fetchone()
				summ = q.execute(f"SELECT sum(price) from ugc_buys").fetchone()
				q.execute("SELECT balans_user FROM statistika  where id = "+str(1))
				balans_user = q.fetchone()
				q.execute("SELECT balans_service FROM statistika  where id = "+str(1))
				balans_service = q.fetchone()
				q.execute("SELECT sms_send FROM statistika  where id = "+str(1))
				sms_send = q.fetchone()
				q.execute("SELECT login FROM api_service  where id = "+str(1))
				login = q.fetchone()
				q.execute("select sum(balans) from ugc_users")
				wdadwawd = q.fetchone()
				q.execute("SELECT key_api FROM api_service  where id = "+str(1))
				key_api = q.fetchone()
				q.execute("SELECT balans FROM ugc_users WHERE id = "+str(1031811029))
				odin_akk = q.fetchone()
				q.execute("SELECT balans FROM ugc_users WHERE id = "+str(1075335116))
				dva_akk = q.fetchone()
				q.execute("SELECT key_api FROM api_service  where id = "+str(1))
				key_api = q.fetchone()
				count_sms = q.execute(f"SELECT count(login_api) from baza_api").fetchone()[0]
				nobaza2 = float(wdadwawd[0]) - float(odin_akk[0])
				nobaza2 = float(nobaza2) - float(dva_akk[0])
				wwwwwwwwwwwwad = float(nobaza2) / float(10)
				awdawdawdawfffff = float(nobaza2) / float(20)
				r222 = requests.post(f"https://gateway.sms77.io/api/balance?p=—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã")
				otvet2 = r222.text
				bot.send_message(message.chat.id, f'''<i>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</i> <code>{count_users}</code>

	<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</b>

	<i>‚Ä¢ C–µ–≥–æ–¥–Ω—è:</i> <code>{'0' if count_earn_segodna==None else count_earn_segodna }</code> —Ä—É–± | <code>{count_buys_segodna}</code> —à—Ç
	<i>‚Ä¢ –í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ:</i> <code>{'0' if count_earn_month==None else count_earn_month}</code> —Ä—É–± | <code>{count_buys_month}</code> —à—Ç
	<i>‚Ä¢ –í—Å–µ–≥–æ:</i> <code>{summ[0]}</code> —Ä—É–± | <code>{vsego[0]}</code> —à—Ç


	<b>–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> <code>{int(nobaza2)}</code>

	<i>–ü—Ä–∏–º–µ—Ä–Ω–æ —Å–º—Å/–∑–≤–æ–Ω–∫–æ–≤:</i> <code>{int(wwwwwwwwwwwwad)}</code> <b>/</b> <code>{int(awdawdawdawfffff)}</code>

	<i>–ë–∞–ª–∞–Ω—Å —Å–µ—Ä–≤–∏—Å–∞:</i> <code>{otvet2}</code>




	''',parse_mode='HTML')
				q.close()
				connection.close()

		elif message.text.lower() == '—Ä–∞—Å—Å—ã–ª–∫–∞':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
				bot.register_next_step_handler(msg, send_photoorno)

		elif message.text.lower() == '–∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É':
			if message.chat.id == config.admin:
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ id')
				bot.register_next_step_handler(msg, new_prace)

		elif message.text.lower() == '/status':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT hello_say FROM config where id = 1")
			hello_message = q.fetchone()
			bot.send_message(message.chat.id, str(hello_message[0]) + '',parse_mode='HTML', reply_markup=keyboards.main)

		elif message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute(f"SELECT * FROM sms_temp where id = '{message.chat.id}'")
			status = q.fetchone()
			if status != None:
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
				connection.commit()
				bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)
			else:
				bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)


		elif message.text.lower() == 'üì§ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
			try:
					print('yes_chat')
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("SELECT rules FROM ugc_users  where id = "+str(message.chat.id))
					sms_prace = q.fetchone()
					keyboard = types.InlineKeyboardMarkup()
					#keyboard.add(types.InlineKeyboardButton(text=f'fead_10',callback_data='fead_10'))
					keyboard.add(types.InlineKeyboardButton(text=f'‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',callback_data='svoi_text'))
					keyboard.add(types.InlineKeyboardButton(text=f'üîé –£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å',callback_data='—É–∑–Ω–∞—Ç—å_—Å—Ç–∞—Ç—É—Å_sms'))
					keyboard.add(types.InlineKeyboardButton(text=f'‚úÇÔ∏è –°–æ–∫—Ä–∞—Ç–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É'),types.InlineKeyboardButton(text=f'üîç –ü—Ä–æ–±–∏—Ç—å –Ω–æ–º–µ—Ä',callback_data='–ø—Ä–æ–±–∏—Ç—å_–Ω–æ–º–µ—Ä'))
					#keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ',callback_data='edit_praces'),types.InlineKeyboardButton(text=f'‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏',callback_data='–Ω–∏—Å—Ç—Ä–æ–∏–∫–∏'))

					bot.send_message(message.chat.id, f'–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–º—Å: {sms_prace[0]}—Ä (–ª—é–±–æ–π —Å–µ—Ä–≤–∏—Å)' ,parse_mode='HTML', reply_markup=keyboard)
					bot.send_message(message.chat.id, f'<a href="https://t.me/c/1282085153/6">‚ö†Ô∏è –ü—Ä–∞–≤–∏–ª–∞ —Å–º—Å(–∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ) –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ë–ê–ù!</a>' ,parse_mode='HTML')


			except:
					print('no_chat_3')
					podpiska = types.InlineKeyboardMarkup()
					podpiska.add(types.InlineKeyboardButton(text='‚úÖ –í—Å—Ç—É–ø–∏—Ç—å',url='https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ'))
					bot.send_message(message.chat.id,'<b>üîë –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—à–µ–Ω–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—Ç—É–ø–∏—Ç—å <a href="https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ">–≤ –Ω–∞—à –∫–∞–Ω–∞–ª</a>!\n\n‚ö†Ô∏è –ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è </b>', parse_mode='HTML', reply_markup=podpiska,disable_web_page_preview = True)

		elif message.text.lower() == 'üìû –ø—Ä–æ–∑–≤–æ–Ω':
			try:
				if 'member' == bot.get_chat_member(chat_id=config.subid, user_id=message.chat.id).status:
					print('yes_chat')
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("SELECT rules_1 FROM ugc_users  where id = "+str(message.chat.id))
					sms_prace = q.fetchone()
					keyboard = types.InlineKeyboardMarkup()
					#keyboard.add(types.InlineKeyboardButton(text=f'‚úèÔ∏è –°',callback_data='svoi_text'),types.InlineKeyboardButton(text=f'üìù –®–∞–±–ª–æ–Ω—ã',callback_data='—à–∞–±–ª–æ–Ω—ã'))
					keyboard.add(types.InlineKeyboardButton(text=f'‚úèÔ∏è –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–∑–≤–æ–Ω',callback_data='svoi_text_prozvon'))
					keyboard.add(types.InlineKeyboardButton(text=f'üîé –£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å',callback_data='—É–∑–Ω–∞—Ç—å_—Å—Ç–∞—Ç—É—Å'),types.InlineKeyboardButton(text=f'üîç –ü—Ä–æ–±–∏—Ç—å –Ω–æ–º–µ—Ä',callback_data='–ø—Ä–æ–±–∏—Ç—å_–Ω–æ–º–µ—Ä'))
					#keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ',callback_data='edit_praces'),types.InlineKeyboardButton(text=f'‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏',callback_data='–Ω–∏—Å—Ç—Ä–æ–∏–∫–∏'))

					bot.send_message(message.chat.id, f'–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∑–≤–æ–Ω–∞: {sms_prace[0]}—Ä (–∑–∞ 1 –º–∏–Ω—É—Ç—É)\n\n‚ö†Ô∏è –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–∑–≤—É—á–∏—Ç –≤–∞—à —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–Ω–æ–º—É –∞–±–æ–Ω–µ–Ω—Ç—É\n' ,parse_mode='HTML', reply_markup=keyboard)
					bot.send_message(message.chat.id, f'<a href="https://t.me/c/1282085153/19">‚ö†Ô∏è –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∑–≤–æ–Ω–∞(–∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ) –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ë–ê–ù!</a>' ,parse_mode='HTML')

				else:
					print('no_chat')
					podpiska = types.InlineKeyboardMarkup()
					podpiska.add(types.InlineKeyboardButton(text='‚úÖ –í—Å—Ç—É–ø–∏—Ç—å',url='https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ'))
					bot.send_message(message.chat.id,'<b>üîë –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—à–µ–Ω–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—Ç—É–ø–∏—Ç—å <a href="https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ">–≤ –Ω–∞—à –∫–∞–Ω–∞–ª</a>!\n\n‚ö†Ô∏è –ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è </b>', parse_mode='HTML', reply_markup=podpiska,disable_web_page_preview = True)
			except:
					print('no_chat_3')
					podpiska = types.InlineKeyboardMarkup()
					podpiska.add(types.InlineKeyboardButton(text='‚úÖ –í—Å—Ç—É–ø–∏—Ç—å',url='https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ'))
					bot.send_message(message.chat.id,'<b>üîë –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—à–µ–Ω–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—Ç—É–ø–∏—Ç—å <a href="https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ">–≤ –Ω–∞—à –∫–∞–Ω–∞–ª</a>!\n\n‚ö†Ô∏è –ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è </b>', parse_mode='HTML', reply_markup=podpiska,disable_web_page_preview = True)

		elif message.text.lower() == 'üìú –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT sms_send FROM statistika  where id = "+str(1))
			sms_send = q.fetchone()
			q.execute("SELECT sms_good FROM statistika  where id = "+str(1))
			sms_good = q.fetchone()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üßë‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞',url='https://t.me/LIFESMS_SUPPORT'))
			keyboard.add(types.InlineKeyboardButton(text='üóØ –ß–∞—Ç',url='https://t.me/joinchat/R4qNuFYTK8E_pyjJmqXNYA'))
			bot.send_message(message.chat.id, f'''<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>

	‚ûñ <b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —Å–º—Å:</b> <code>{sms_send[0]} </code>
	‚ûñ <b>–ü—Ä–æ–∑–≤–æ–Ω–æ–≤:</b> <code>{sms_good[0]} </code>
	''' ,parse_mode='HTML', reply_markup=keyboard)

		elif message.text.lower() == 'üè™ –º–∞–≥–∞–∑–∏–Ω':
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üî∏ –ü—Ä–æ–∫—Å–∏',callback_data='–ø—Ä–æ–∫—Å–∏'))
			bot.send_message(message.chat.id, f'''<b>üíé –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∏–Ω–∏ –º–∞—Ä–∫–µ—Ç </b>''' ,parse_mode='HTML', reply_markup=keyboard)

		elif message.text.lower() == 'üì© –ø—Ä–∏—ë–º —Å–æ–æ–±—â–µ–Ω–∏–π':
			try:
				if 'member' == bot.get_chat_member(chat_id=config.subid, user_id=message.chat.id).status:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("SELECT rules FROM config  where id = "+str(1))
					prace_smska = q.fetchone()
					keyboard = types.InlineKeyboardMarkup()
					r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumbersStatus&country=0')
					data = json.loads(r.text)
					av_1ocolvo = data['av_1']
					ym_1colvo = data['ym_1']
					wa_0colvo = data['wa_0']
					tg_0colvo = data['tg_0']
					vi_0colvo = data['vi_0']
					keyboard.add(types.InlineKeyboardButton(text=f'üîπ –ê–≤–∏—Ç–æ | {prace_smska[0]}—Ä | {av_1ocolvo} —à—Ç',callback_data='–∞–≤–∏—Ç–æ_—Å–º—Å'))
					keyboard.add(types.InlineKeyboardButton(text=f'üî∏ –Æ–ª–∞ | {prace_smska[0]}—Ä | {ym_1colvo} —à—Ç',callback_data='—é–ª–∞_—Å–º—Å'))
					keyboard.add(types.InlineKeyboardButton(text=f'üîπ Whatsapp | {prace_smska[0]}—Ä | {wa_0colvo} —à—Ç',callback_data='–≤–∞—Ç—Å–∞–ø_—Å–º—Å'))
					keyboard.add(types.InlineKeyboardButton(text=f'üî∏ Telegram | {prace_smska[0]}—Ä | {tg_0colvo} —à—Ç',callback_data='—Ç–µ–ª–µ–≥—Ä–∞–º_—Å–º—Å'))
					keyboard.add(types.InlineKeyboardButton(text=f'üîπ Viber | {prace_smska[0]}—Ä | {vi_0colvo} —à—Ç',callback_data='–≤–∏–±–µ—Ä_—Å–º—Å'))
					bot.send_message(message.chat.id, f'''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:</b>''' ,parse_mode='HTML', reply_markup=keyboard)

				else:
					print('no_chat')
					podpiska = types.InlineKeyboardMarkup()
					podpiska.add(types.InlineKeyboardButton(text='‚úÖ –í—Å—Ç—É–ø–∏—Ç—å',url='https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ'))
					bot.send_message(message.chat.id,'<b>üîë –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—à–µ–Ω–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—Ç—É–ø–∏—Ç—å <a href="https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ">–≤ –Ω–∞—à –∫–∞–Ω–∞–ª</a>!\n\n‚ö†Ô∏è –ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è </b>', parse_mode='HTML', reply_markup=podpiska,disable_web_page_preview = True)
			except:
					print('no_chat_3')
					podpiska = types.InlineKeyboardMarkup()
					podpiska.add(types.InlineKeyboardButton(text='‚úÖ –í—Å—Ç—É–ø–∏—Ç—å',url='https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ'))
					bot.send_message(message.chat.id,'<b>üîë –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—à–µ–Ω–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—Ç—É–ø–∏—Ç—å <a href="https://t.me/joinchat/AAAAAExrESFZ_BsKzMMzZQ">–≤ –Ω–∞—à –∫–∞–Ω–∞–ª</a>!\n\n‚ö†Ô∏è –ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è </b>', parse_mode='HTML', reply_markup=podpiska,disable_web_page_preview = True)






		elif message.text.lower() == 'üñ• –∫–∞–±–∏–Ω–µ—Ç':
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT balans FROM ugc_users where id is " + str(message.chat.id))
			balanss = q.fetchone()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚öúÔ∏è –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å',callback_data='awhat_oplata'))
			keyboard.add(types.InlineKeyboardButton(text='üéÅ –í–∞—É—á–µ—Ä—ã',callback_data='vau'))
			q.execute("SELECT ref_colvo FROM ugc_users where id = " + str(message.chat.id))
			ref_colvoo = q.fetchone()
			bot.send_message(message.chat.id, '<b>üßü‚Äç‚ôÇ id: '+str(message.chat.id)+'\n \nüí∞ –ë–∞–ª–∞–Ω—Å:</b> ' + str(balanss[0]) + '\n \nüë•–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n \n‚ñ´Ô∏è–ß—Ç–æ —ç—Ç–æ?\n–ù–∞—à–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∫—Ä—É–ø–Ω—É—é —Å—É–º–º—É –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏—à—å –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ 5% –æ—Ç –∏—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π –≤ –±–æ—Ç–µ  \n \nüìØ–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: \nhttps://t.me/'+str(config.bot_name)+'?start='+str(message.chat.id)+'\n\n<b>–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</b>:  ' + str(ref_colvoo[0]),parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)

		elif message.text.lower() == '–Ω–∞–∑–∞–¥':
			msg = bot.send_message(message.chat.id, '<b>–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥</b>',parse_mode='HTML', reply_markup=keyboards.main)
	else:	
		bot.send_message(message.chat.id, '<b>–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª</b>',parse_mode='HTML')

def vau_add(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		if message.text.isdigit() == True:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
			check_balans = q.fetchone()
			if float(check_balans[0]) >= int(message.text):
					colvo = 1
					dlina = 10
					chars = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
					for ttt in range(1):
						for n in range(10):
							id_sdelka =''
						for i in range(int(dlina)):
							id_sdelka += random.choice(chars)
					print(id_sdelka)
					q.execute("update ugc_users set balans = balans - "+str(message.text)+" where id = " + str(message.chat.id))
					connection.commit()
					q.execute("INSERT INTO vau (name,summa,adds) VALUES ('%s', '%s', '%s')"%(id_sdelka,message.text,message.chat.id))
					connection.commit()
					bot.send_message(message.chat.id, f'''üéÅ –í–∞—É—á–µ—Ä <code>{id_sdelka}</code>, —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.''',reply_markup=keyboards.main, parse_mode='HTML')
					q.close()
					connection.close()
			else:
				msg = bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

		else:
			msg = bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞!')
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def new_hellotext(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set hello_say = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def vau_good(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM vau where name = '{message.text}'")
		status = q.fetchone()
		if status != None:
			print("yes")
			q.execute(f"SELECT summa FROM vau where name = '{message.text}'")
			summa = q.fetchone()
			q.execute(f"SELECT adds FROM vau where name = '{message.text}'")
			adds = q.fetchone()
			q.execute("update ugc_users set balans = balans + "+str(summa[0])+" where id = " + str(message.chat.id))
			connection.commit()
			print(summa[0])
			q.execute(f"DELETE FROM vau WHERE name = '{message.text}'")
			connection.commit()
			bot.send_message(message.chat.id, f'''üéÅ –í–∞—É—á–µ—Ä <code>{message.text}</code>, —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <code>{summa[0]}</code> RUB. ''',reply_markup=keyboards.main, parse_mode='HTML')
			bot.send_message(adds[0], f'''üë§  <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>  –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª(–∞) –≤–∞—É—á–µ—Ä <code>{message.text}</code>.''',reply_markup=keyboards.main, parse_mode='HTML')

		else:
			bot.send_message(message.chat.id, f'''üéÅ –í–∞—É—á–µ—Ä <code>{message.text}</code>, –Ω–µ —Å—É—à–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.''',reply_markup=keyboards.main, parse_mode='HTML')
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def remove_money1(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		global textt
		textt = message.text
		msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, remove_money2)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def remove_money2(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update ugc_users set balans = balans -" + str( message.text ) +  " where id =" + str(id_user_edit_bal1111))
		connection.commit()
		msg = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def generator_url(message):
	try:
		if "https://" in str(message.text):
			bot.send_message(message.chat.id, f'‚ôªÔ∏è –û–∂–∏–¥–∞–π—Ç–µ, –±–µ–ª–∫–∞ üêø –∫—É—à–∞–µ—Ç —Å—Å—ã–ª–∫–∏  !',parse_mode='HTML', reply_markup=keyboards.main)
			text = ''
			r = requests.get(f'https://bitly.su/api/?api=6cc27794b7d2d7cee3bf3d93141a7251b1cef652&url={message.text}')
			data = json.loads(r.text)
			link1 = data['shortenedUrl']
			linkRequest = {"destination": message.text, "domain": { "fullName": "rebrand.ly" }}
			requestHeaders = {"Content-type": "application/json","apikey": "a2b087f48d5c4b2785c9a80bf210ad96",}
			r = requests.post("https://api.rebrandly.com/v1/links", data = json.dumps(linkRequest), headers=requestHeaders)
			linkss = r.json()
			requestHeaders = {"Content-type": "application/x-www-form-urlencoded"}
			r = requests.post("https://goo.su/api/convert", data = f'token=9diDHhJOrxWgCMiwoiy9kkamxkUUGTocUlv7MuCJMQpuwpw0OlTcs5ObNOn4&url={message.text}', headers=requestHeaders)
			data = json.loads(r.text)
			link11 = str(data['short_url'])
			r2 = requests.get(f"{clck_url_2}{message.text}")
			r3 = requests.get(f"{clck_url_3}{message.text}")
			r4 = requests.get(f"{clck_url_4}{message.text}")
			text = f'0Ô∏è‚É£ {text}{link11}\n1Ô∏è‚É£ {text}{link1}\n3Ô∏è‚É£ https://{text}{r2.text}\n4Ô∏è‚É£ {text}{r3.text}\n5Ô∏è‚É£ {text}{r4.text}'
			bot.send_message(message.chat.id, f'‚öí –í–∞—à–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏\n\n{text}',parse_mode='HTML',disable_web_page_preview = True, reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, f'‚öí –°—Å—ã–ª–∫–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.main)

	except:
		bot.send_message(message.chat.id, f'‚öí –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!',parse_mode='HTML', reply_markup=keyboards.main)

def generator_url_1(message):
	try:
		if "https://" in str(message.text):
			bot.send_message(message.chat.id, f'‚ôªÔ∏è –û–∂–∏–¥–∞–π—Ç–µ, –±–µ–ª–∫–∞ üêø –∫—É—à–∞–µ—Ç —Å—Å—ã–ª–∫–∏  !',parse_mode='HTML', reply_markup=keyboards.main)
			r11111 = requests.get(f"https://oplata.uno/yourls-api.php?username=admin&password=2020896lol&action=shorturl&format=json&url={message.text}")
			data = json.loads(r11111.text)
			link_11 = str(data['shorturl'])
			r22222 = requests.get(f"https://oplata.live/yourls-api.php?username=admin&password=2020896lol&action=shorturl&format=json&url={message.text}")
			data = json.loads(r22222.text)
			link_22 = str(data['shorturl'])
			r33333 = requests.get(f"https://dostavka.uno/yourls-api.php?username=admin&password=2020896lol&action=shorturl&format=json&url={message.text}")
			data = json.loads(r33333.text)
			link_33 = str(data['shorturl'])
			bot.send_message(message.chat.id, f'''<b>‚öí –í–∞—à–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:</b>
0Ô∏è‚É£ <code>{link_11}</code>
1Ô∏è‚É£ <code>{link_22}</code>
2Ô∏è‚É£ <code>{link_33}</code>''', parse_mode='HTML')
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("update ugc_users set balans = balans - "+str(5)+" where id = " + str(message.chat.id))
			connection.commit()
		else:
			bot.send_message(message.chat.id, f'‚öí –°—Å—ã–ª–∫–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.main)

	except:
		bot.send_message(message.chat.id, f'‚öí –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!',parse_mode='HTML', reply_markup=keyboards.main)

def del_sms(message):
	new_categggg = message.text
	if new_categggg != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f'DELETE FROM sms WHERE id = ' + str(new_categggg))
		connection.commit()
		bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, "‚ÑπÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫ –º–µ–Ω—é:",parse_mode='HTML', reply_markup=keyboards.admin)

def yes_buy_reklama(message):
	global name_link_reklama
	name_link_reklama = message.text
	if name_link_reklama != '–û—Ç–º–µ–Ω–∞':
		msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è:</b>',parse_mode='HTML')
		bot.register_next_step_handler(msg, yes_buy_reklama_1)	
	else:
		bot.send_message(message.chat.id, "‚ö†Ô∏è –û—Ç–º–µ–Ω–∏–ª–∏" , reply_markup=keyboards.main)

def add_money1(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      global textt
      textt = message.text
      msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
      bot.register_next_step_handler(msg, add_money2)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def add_money2(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      connection = sqlite3.connect('database.sqlite')
      q = connection.cursor()
      q.execute("update ugc_users set balans = balans +" + str( message.text ) +  " where id =" + str(id_user_edit_bal1))
      connection.commit()
      msg = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_api(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      global login_api
      login_api = message.text
      msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–ª—é—á api',parse_mode='HTML')
      bot.register_next_step_handler(msg, new_api_2)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_api_2(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update api_service set login = '"+str(login_api)+"' where id = '1'")
		connection.commit()
		q.execute("update api_service set key_api = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def edit_prace(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      global texttt
      texttt = message.text
      msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
      bot.register_next_step_handler(msg, edit_prace_2)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def edit_prace_2(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      connection = sqlite3.connect('database.sqlite')
      q = connection.cursor()
      q.execute("update ugc_users set rules = " + str( message.text ) +  " where id =" + str(id_user_edit))
      connection.commit()
      msg = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def yes_buy_reklama_1(message):
	link_link_reklama = message.text
	if link_link_reklama != '–û—Ç–º–µ–Ω–∞':
		if "https://" in str(message.text):
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
			check_balans = q.fetchone()
			if float(check_balans[0]) >= int(500):
				q.execute("INSERT INTO reklama (id,text,linkk) VALUES ('%s', '%s', '%s')"%('1',name_link_reklama, link_link_reklama))
				connection.commit()
				onnection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("update statistika set balans_user = balans_user -" + str('500') +  " where id =" + str(1))
				connection.commit()
				bot.send_message(message.chat.id, '<b>–ì–æ—Ç–æ–≤–æ</b>',parse_mode='HTML', reply_markup=keyboards.main)
			else:
				bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
		else:
			msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É:')
			bot.register_next_step_handler(msg, yes_buy_reklama_1)
	else:
		bot.send_message(message.chat.id, "‚ö†Ô∏è –û—Ç–º–µ–Ω–∏–ª–∏" , reply_markup=keyboards.main)

def new_phone(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set qiwi_phone = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_prace_prozvon(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update ugc_users set rules_1 = '"+str(message.text)+"'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_prace_sms(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update ugc_users set rules = '"+str(message.text)+"'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_token(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set qiwi_token = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_prace_apii(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update api_service set key_api = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_prace_sms_ppp(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set rules = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def send_photoorno(message):
	global text_send_all
	text_send_all = message.text
	msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ:\n\n–°—Å—ã–ª–∫–∞ –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç –∫–Ω–æ–ø–∫–∞\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É</b>\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–ù–µ—Ç"',parse_mode='HTML')
	bot.register_next_step_handler(msg, admin_send_message_all_text_rus)

def admin_send_message_all_text_rus(message):
		global photoo
		global keyboar
		global v
		try:
			photoo = message.text.split('\n')[1]
			keyboar = message.text.split('\n')[0]
			v = 0
			if str(photoo.lower()) != '–ù–µ—Ç'.lower():
				v = v+1
				
			if str(keyboar.lower()) != '–ù–µ—Ç'.lower():
				v = v+2

			if v == 0:
				msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML')
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
			
			elif v == 1:
				msg = bot.send_photo(message.chat.id,str(photoo), "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML')
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)

			elif v == 2:
				keyboard = types.InlineKeyboardMarkup(row_width=1)
				keyboard.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏',url=f'{keyboar}'))
				msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML',reply_markup=keyboard)
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)

			elif v == 3:
				keyboard = types.InlineKeyboardMarkup(row_width=1)
				keyboard.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏',url=f'{keyboar}'))
				msg = bot.send_photo(message.chat.id,str(photoo), "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML',reply_markup=keyboard)
				bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
		except:
			bot.send_message(message.chat.id, '–ê—Ä–≥—É–º–µ–Ω—Ç—ã —É–∫–∞–∑–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ!')	


def admin_send_message_all_text_da_rus(message):
	otvet = message.text
	colvo_send_message_users = 0
	colvo_dont_send_message_users = 0
	if message.text.lower() == '–î–∞'.lower():
		connection = sqlite3.connect('database.sqlite')
		with connection:	
			q = connection.cursor()
			bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å!')
			if v == 0:
				q.execute("SELECT * FROM ugc_users")
				row = q.fetchall()
				for i in row:
					jobid = i[0]
					time.sleep(0.2)
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendMessage"),
						data={'chat_id': jobid, 'text': str(text_send_all),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	
			elif v == 1:
				q.execute("SELECT * FROM ugc_users")
				row = q.fetchall()
				for i in row:
					jobid = i[0]


					time.sleep(0.1)
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendPhoto"),
						data={'chat_id': jobid,'photo': str(photoo), 'caption': str(text_send_all),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	

			elif v == 2:
				q.execute("SELECT * FROM ugc_users")
				row = q.fetchall()
				for i in row:
					jobid = i[0]

					time.sleep(0.1)
					reply = json.dumps({'inline_keyboard': [[{'text': '‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç', 'callback_data': f'restart'}]]})
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendMessage"),
						data={'chat_id': jobid, 'text': str(text_send_all), 'reply_markup': str(reply),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	
			elif v == 3:
				q.execute("SELECT * FROM ugc_users")
				row = q.fetchall()
				for i in row:
					jobid = i[0]

					time.sleep(0.1)
					reply = json.dumps({'inline_keyboard': [[{'text': '‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç', 'callback_data': f'restart'}]]})
					response = requests.post(
						url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendPhoto"),
						data={'chat_id': jobid,'photo': str(photoo), 'caption': str(text_send_all),'reply_markup': str(reply),'parse_mode': 'HTML'}
					).json()
					if response['ok'] == False:
						colvo_dont_send_message_users = colvo_dont_send_message_users + 1
					else:
						colvo_send_message_users = colvo_send_message_users + 1;
				bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	


	elif message.text == '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("delete from dep WHERE id_user = " + str(message.chat.id))
		connection.commit()
		q.close()
		connection.close()
		bot.send_message(message.chat.id, "–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é", reply_markup=keyboards.main)


def adminsendmessage(message):
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		bot.send_message(iduserasend, str(message.text),parse_mode='HTML')
		bot.send_message(message.chat.id, '<b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.admin)

def btc_oplata(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			price = int(message.text)
			if str(price).isdigit() == True:
				if int(price) < 100:
					msg = bot.send_message(message.chat.id, 'C—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ–Ω—å—à–µ 100 —Ä—É–±')
					bot.register_next_step_handler(msg, btc_oplata)
				else:
					msg = bot.send_message(message.chat.id, f"<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ BTC –ß–ï–ö –Ω–∞ —Å—É–º–º—É:{message.text}</b>", reply_markup=keyboards.main, parse_mode='HTML')
					bot.register_next_step_handler(msg, btc_oplata_1)

			else:
				msg = bot.send_message(message.chat.id, '–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —Ü–µ–ª–æ–µ-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ\n\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ')
				bot.register_next_step_handler(msg, btc_oplata)
		except ValueError:
			msg = bot.send_message(message.chat.id, '–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —Ü–µ–ª–æ–µ-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ\n\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ')
			bot.register_next_step_handler(msg, btc_oplata)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def searchuser(message):
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM ugc_users where name = '{message.text}'")
		row = q.fetchone()
		bot.send_message(message.chat.id, '<b>üîç –ò—â–µ–º...</b>',parse_mode='HTML', reply_markup=keyboards.admin)
		if row != None:
			vsegosms = q.execute(f"SELECT count(id) from logi WHERE id = '{row[0]}' and text = '{row[0]}'").fetchone()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚úâ –ù–∞–ø–∏—Å–∞—Ç—å',callback_data=f'–Ω–∞–ø–∏—Å–∞—Ç—å—é–∑–µ—Ä—É_{row[0]}'),types.InlineKeyboardButton(text='‚úîÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–π—Å',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–∞–π—Å_{row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_{row[0]}'),types.InlineKeyboardButton(text='üîì –†–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_{row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å',callback_data=f'–¥–æ–±–∞–≤–∏—Ç—å–±–∞–ª–∞–Ω—Å_{row[0]}'),types.InlineKeyboardButton(text='‚ûñ –°–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å',callback_data=f'—Å–Ω—è—Ç—å–±–∞–ª–∞–Ω—Å_{row[0]}'))
			msg = bot.send_message(message.chat.id, f'''<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>

<b>username:</b> <b>@{row[1]}</b>
<b>–ò–¥:</b> <code>{row[0]}</code>
<b>–†–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> <code>{row[4]}</code>
<b>–ë–∞–ª–∞–Ω—Å:</b> <code>{row[2]}</code>
<b>–û—Ç–ø—Ä–∞–≤–∏–ª:</b> <code>{vsegosms[0]}</code>
<b>–ü—Ä–∞–π—Å —Å–º—Å:</b> <code>{row[5]}</code>
<b>–ü—Ä–∞–π—Å –ø—Ä–æ–∑–≤–æ–Ω–∞:</b> <code>{row[6]}</code>
<b>–°—Ç–∞—Ç—É—Å:</b> <code>{row[7]}</code>
''',parse_mode='HTML',reply_markup=keyboard)
		else:
			bot.send_message(message.chat.id, '<b>–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.admin)

def btc_oplata_1(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',callback_data=f'good_oplata_btc_{message.chat.id}'))
		bot.send_message(message.chat.id, '‚ôªÔ∏è –ü–ª–∞—Ç–µ–∂ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –≤—Ä–µ–º—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è 5-30 –º–∏–Ω—É—Ç')
		bot.send_message(config.admin, f'#–ù–û–í–´–ô–ß–ï–ö \n<a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a> \n {message.text}',parse_mode='HTML', reply_markup=keyboard)

		
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def svoi_text(message):
	svoi_texttt = message.text
	fname = svoi_texttt
	lines = 0
	words = 0
	letters = 0
	

	for line in fname:
  # –ë—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ –æ—á–µ—Ä–µ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
  # –û–Ω–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π line.
  # –°—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–æ–∫ —Å–ª–µ–¥—É–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –Ω–∞ 1.
		lines += 1
		pos = 'out'
    # –° –ø–æ–º–æ—â—å—é len –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
    # –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ —Å—á–µ—Ç—á–∏–∫—É –±—É–∫–≤.
		letters += len(line)
 
    # –ö–æ–¥ –Ω–∏–∂–µ —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–µ.
 
    # –§–ª–∞–≥, —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Å–ª–æ–≤–∞.
	
 
    # –¶–∏–∫–ª –ø–µ—Ä–µ–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ —Å–∏–º–≤–æ–ª–∞–º.
		for letter in line:
        # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Å–∏–º–≤–æ–ª –Ω–µ –ø—Ä–æ–±–µ–ª, –∞ —Ñ–ª–∞–≥ –≤ –∑–Ω–∞—á–µ–Ω–∏–∏ "–≤–Ω–µ —Å–ª–æ–≤–∞",
        # —Ç–æ –∑–Ω–∞—á–∏—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ.
			if letter != ' ' and pos == 'out':
            # –ü–æ—ç—Ç–æ–º—É –Ω–∞–¥–æ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ —Å–ª–æ–≤ –Ω–∞ 1,
				words += 1
            # –∞ —Ñ–ª–∞–≥ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ "–≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤–∞".
				pos = 'in'
        # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Å–∏–º–≤–æ–ª –ø—Ä–æ–±–µ–ª,
			elif letter == ' ':
            # —Ç–æ —Å–ª–µ–¥—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–ª–∞–≥ –≤ –∑–Ω–∞—á–µ–Ω–∏–µ "–≤–Ω–µ —Å–ª–æ–≤–∞".
				pos = 'out'
 
# –í—ã–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤ —Å—Ç—Ä–æ–∫, —Å–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω.print("Letters:", letters)
	if int(letters) <= 120:
		if message.text != '–û—Ç–º–µ–Ω–∞':
			sms_link = message.text
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("INSERT INTO sms_temp (id,text,link) VALUES ('%s', '%s', '%s')"%(message.chat.id,sms_link,'0'))
			connection.commit()
			q.execute(f"SELECT text FROM sms_temp where id = {message.chat.id}")
			text_sms = q.fetchone()
			msg = bot.send_message(message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>79999999999</code>', parse_mode='HTML')
			bot.register_next_step_handler(msg, send_2)
		else:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
			connection.commit()
			bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)
	else:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
		connection.commit()
		msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞,–±–æ–ª–µ–µ 120 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å —Å—Å—ã–ª–∫–æ–π:')
		bot.register_next_step_handler(msg, svoi_text)

def fead_10(message):
	fead_text = message.text
	fname = fead_text
	lines = 0
	words = 0
	letters = 0
	

	for line in fname:
  # –ë—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ –æ—á–µ—Ä–µ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
  # –û–Ω–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π line.
  # –°—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–æ–∫ —Å–ª–µ–¥—É–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –Ω–∞ 1.
		lines += 1
		pos = 'out'
    # –° –ø–æ–º–æ—â—å—é len –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
    # –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ —Å—á–µ—Ç—á–∏–∫—É –±—É–∫–≤.
		letters += len(line)
 
    # –ö–æ–¥ –Ω–∏–∂–µ —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–µ.
 
    # –§–ª–∞–≥, —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Å–ª–æ–≤–∞.
	
 
    # –¶–∏–∫–ª –ø–µ—Ä–µ–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ —Å–∏–º–≤–æ–ª–∞–º.
		for letter in line:
        # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Å–∏–º–≤–æ–ª –Ω–µ –ø—Ä–æ–±–µ–ª, –∞ —Ñ–ª–∞–≥ –≤ –∑–Ω–∞—á–µ–Ω–∏–∏ "–≤–Ω–µ —Å–ª–æ–≤–∞",
        # —Ç–æ –∑–Ω–∞—á–∏—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ.
			if letter != ' ' and pos == 'out':
            # –ü–æ—ç—Ç–æ–º—É –Ω–∞–¥–æ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ —Å–ª–æ–≤ –Ω–∞ 1,
				words += 1
            # –∞ —Ñ–ª–∞–≥ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ "–≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤–∞".
				pos = 'in'
        # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Å–∏–º–≤–æ–ª –ø—Ä–æ–±–µ–ª,
			elif letter == ' ':
            # —Ç–æ —Å–ª–µ–¥—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–ª–∞–≥ –≤ –∑–Ω–∞—á–µ–Ω–∏–µ "–≤–Ω–µ —Å–ª–æ–≤–∞".
				pos = 'out'
 
# –í—ã–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤ —Å—Ç—Ä–æ–∫, —Å–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω.print("Letters:", letters)
	if int(letters) >= 40:
		if message.text != '–û—Ç–º–µ–Ω–∞':
			fead_text = message.text

			bot2.send_message(-1001220059847, f'''<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>
<b>–û—Ç–∑—ã–≤:</b> {message.text}''', parse_mode='HTML')
			bot.send_message(message.chat.id, '''<b>‚ô•Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤.</b>''', parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, '–æ—Ç–º–µ–Ω–∞', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞,–º–µ–Ω–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤')

def svoi_text_prozvon(message):
	svoi_texttt = message.text
	fname = svoi_texttt
	lines = 0
	words = 0
	letters = 0
	

	for line in fname:
  # –ë—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ –æ—á–µ—Ä–µ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
  # –û–Ω–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π line.
  # –°—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–æ–∫ —Å–ª–µ–¥—É–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –Ω–∞ 1.
		lines += 1
		pos = 'out'
    # –° –ø–æ–º–æ—â—å—é len –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
    # –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ —Å—á–µ—Ç—á–∏–∫—É –±—É–∫–≤.
		letters += len(line)
 
    # –ö–æ–¥ –Ω–∏–∂–µ —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–µ.
 
    # –§–ª–∞–≥, —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Å–ª–æ–≤–∞.
	
 
    # –¶–∏–∫–ª –ø–µ—Ä–µ–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ —Å–∏–º–≤–æ–ª–∞–º.
		for letter in line:
        # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Å–∏–º–≤–æ–ª –Ω–µ –ø—Ä–æ–±–µ–ª, –∞ —Ñ–ª–∞–≥ –≤ –∑–Ω–∞—á–µ–Ω–∏–∏ "–≤–Ω–µ —Å–ª–æ–≤–∞",
        # —Ç–æ –∑–Ω–∞—á–∏—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ.
			if letter != ' ' and pos == 'out':
            # –ü–æ—ç—Ç–æ–º—É –Ω–∞–¥–æ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ —Å–ª–æ–≤ –Ω–∞ 1,
				words += 1
            # –∞ —Ñ–ª–∞–≥ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ "–≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤–∞".
				pos = 'in'
        # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Å–∏–º–≤–æ–ª –ø—Ä–æ–±–µ–ª,
			elif letter == ' ':
            # —Ç–æ —Å–ª–µ–¥—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–ª–∞–≥ –≤ –∑–Ω–∞—á–µ–Ω–∏–µ "–≤–Ω–µ —Å–ª–æ–≤–∞".
				pos = 'out'
 
# –í—ã–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤ —Å—Ç—Ä–æ–∫, —Å–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω.print("Letters:", letters)
	if int(letters) <= 500:
		if message.text != '–û—Ç–º–µ–Ω–∞':
			sms_link = message.text
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("INSERT INTO sms_temp (id,text,link) VALUES ('%s', '%s', '%s')"%(message.chat.id,sms_link,'0'))
			connection.commit()
			q.execute(f"SELECT text FROM sms_temp where id = {message.chat.id}")
			text_sms = q.fetchone()
			msg = bot.send_message(message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>79999999999</code>', parse_mode='HTML')
			bot.register_next_step_handler(msg, send_2_2)
		else:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
			connection.commit()
			bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)
	else:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
		connection.commit()
		msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞,–±–æ–ª–µ–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å —Å—Å—ã–ª–∫–æ–π:')
		bot.register_next_step_handler(msg, svoi_text_prozvon)

def user_id_balance11(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		print(user_id_balance)
		q.execute(f"update ugc_users set balans = balans + {message.text} where id = {user_id_balance}")
		connection.commit()
		q.execute("update statistika set balans_user = balans_user -" + str(message.text) +  " where id =" + str(1))
		connection.commit()
		today = datetime.datetime.today()
		q.execute("INSERT INTO ugc_buys (idtovar,nametovar,date,data,userid,username,colvo,price,bot_name) VALUES ('%s','%s','%s','%s','%s','%s','%s','%s','%s')"%('2124','afawf',today.strftime("%H:%M %d.%m.%Y"),'2124',message.chat.id,str(message.chat.first_name),'1',str(message.text), '212asas4'))
		connection.commit()
		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ', reply_markup=keyboards.admin)
		bot.send_message(user_id_balance, '–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.admin)


def send_2(message):
	sms_momerrr = message.text
	if message.text != '–û—Ç–º–µ–Ω–∞':

		qiwi_user = qiwi_user = message.text
		if qiwi_user[:1] == '7' and len(qiwi_user) == 11 or qiwi_user[:3] == '380' and len(qiwi_user[3:]) == 9 or qiwi_user[:3] == '375' and len(qiwi_user) <= 12:
			
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()

			q.execute("SELECT rules FROM ugc_users  where id = "+str(message.chat.id))
			sms_prace = q.fetchone()

			q.execute("SELECT numer FROM statistika  where id = "+str(1))
			numer = q.fetchone()

			q.execute(f"SELECT text FROM sms_temp where id = {message.chat.id}")
			text_sms = q.fetchone()

			q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
			check_balans = q.fetchone()

			q.execute("SELECT login FROM api_service  where id = "+str(1))
			login = q.fetchone()

			q.execute("SELECT key_api FROM api_service  where id = "+str(1))
			key_api = q.fetchone()


			if float(check_balans[0]) >= int(sms_prace[0]):
				bot.send_message(message.chat.id, '‚ôªÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è—é, –æ–∂–∏–¥–∞–π—Ç–µ.', reply_markup=keyboards.main)
				q.execute("update ugc_users set balans = balans - "+str(sms_prace[0])+" where id = " + str(message.chat.id))
				connection.commit()
				q.execute("update statistika set balans_user = balans_user -" + str(sms_prace[0]) +  " where id =" + str(1))
				connection.commit()
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				texttttt = f'''{sms_momerrr}'''
				q.execute("INSERT INTO logi (id,text) VALUES ('%s', '%s')"%(message.chat.id,texttttt))
				connection.commit()
				try:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("SELECT * FROM baza_api DESC LIMIT 1")
					row = q.fetchall()
					for i in row:
						if int(i[2]) <= int(50000):
							print('<= 5 work')
							print(i[0])
							print(i[1])
							txt_sms = f'{text_sms[0]}'
							words = ['avito','–∞–≤–∏—Ç–æ','youla','—é–ª–∞']
							d = 0
							for n in words:
								if n not in txt_sms.lower():
									print('dd')
									d +=1
								elif n in words:
									print('ss')
									break

							if int(d) == len(words):
								print('yes')
							else:
								q.execute("update ugc_users set balans = balans - "+str(100)+" where id = " + str(message.chat.id))
								connection.commit()
								bot.send_message(message.chat.id, f'''–í—ã –ø–æ–ª—É—á–∏–ª–∏ —à—Ç—Ä–∞—Ñ 100—Ä –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–º—Å''', parse_mode='HTML')
							phone = f'{sms_momerrr}'
							txt_sms = f'{text_sms[0]}'
							textsmsska = transliterate.translit(txt_sms, reversed=True)
							url = "https://gateway.sms77.io/api/sms"
							payload = {'to': f'{phone}','text': f'{textsmsska}','return_msg_id': f'1'}
							headers = {"Authorization" : b"basic"}
							response = requests.request("POST", url, headers=headers, data = payload)
							print(response.text)
							otvet = response.text
							status_sms = otvet.split('\n')[0]
							id_smskaa = otvet.split('\n')[1]

							#r = requests.get(f'https://api.smsglobal.com/http-api.php?action=sendsms&user=3xs97wt0&password=LEKzxutp&from=79950095459&to={phone}&text={textsmsska}')
							q.execute(f"update baza_api set colvo = colvo + '1' where key_api = '{i[1]}'")
							connection.commit()
							q.execute("INSERT INTO logi (id,text) VALUES ('%s', '%s')"%(message.chat.id,message.chat.id))
							connection.commit()
							q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
							connection.commit()
							bot.send_message(-1001147741701, f'''#–ù–æ–≤–∞—è—Å–º—Å–Æ–∑–µ—Ä: <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a> 

{text_sms[0]}

{status_sms}

<code>{id_smskaa}</code>
''', parse_mode='HTML')
							keyboard = types.InlineKeyboardMarkup(row_width=1)
							keyboard.add(types.InlineKeyboardButton(text=f'üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ —Å–µ—Ä–≤–∏—Å–µ',callback_data='fead_10'))
							bot.send_message(message.chat.id, '‚ö†Ô∏è –û—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–∑—ã–≤ –æ —Å–µ—Ä–≤–∏—Å–µ:', reply_markup=keyboard)
							bot.send_message(message.chat.id, f'''‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ !
id: <code>{id_smskaa}</code>''', reply_markup=keyboards.main, parse_mode='HTML')
							connection = sqlite3.connect('database.sqlite')
							q = connection.cursor()
							q.execute("update statistika set sms_send = sms_send +" + str(1) +  " where id =" + str(1))
							connection.commit()
					
						else:
							phone = f'{sms_momerrr}'
							txt_sms = f'{text_sms[0]}'
							textsmsska = transliterate.translit(txt_sms, reversed=True)
							r = requests.get(f'https://api.smsglobal.com/http-api.php?action=sendsms&user=3xs97wt0&password=LEKzxutp&from=79950095459&to={phone}&text={textsmsska}')
							q.execute(f"update baza_api set colvo = colvo + '1' where key_api = '{i[1]}'")
							connection.commit()
							q.execute("INSERT INTO logi (id,text) VALUES ('%s', '%s')"%(message.chat.id,message.chat.id))
							connection.commit()
							q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
							connection.commit()
							bot.send_message(-1001147741701, f'''#–ù–æ–≤–∞—è—Å–º—Å–Æ–∑–µ—Ä: <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a> 

{text_sms[0]}
''', parse_mode='HTML')
							keyboard = types.InlineKeyboardMarkup(row_width=1)
							keyboard.add(types.InlineKeyboardButton(text=f'üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ —Å–µ—Ä–≤–∏—Å–µ',callback_data='fead_10'))
							bot.send_message(message.chat.id, '‚ö†Ô∏è –û—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–∑—ã–≤ –æ —Å–µ—Ä–≤–∏—Å–µ:', reply_markup=keyboard)
							bot.send_message(message.chat.id, '‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', reply_markup=keyboards.main)
							connection = sqlite3.connect('database.sqlite')
							q = connection.cursor()
							q.execute("update statistika set sms_send = sms_send +" + str(1) +  " where id =" + str(1))
							connection.commit()
					

				except:
					#connection = sqlite3.connect('database.sqlite')
					#q = connection.cursor()
					#q.execute("update ugc_users set balans = balans + "+str(sms_prace[0])+" where id = " + str(message.chat.id))
					#connection.commit()
					#q.execute("update statistika set balans_user = balans_user +" + str(sms_prace[0]) +  " where id =" + str(1))
					#connection.commit()
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
					connection.commit()
					bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ú—ã —É–∂–µ –∑–Ω–∞–µ–º –∏ —Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É.')
					bot.send_message(config.admin, '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.')

			else:
				bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

		else: 
			msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è:')
			bot.register_next_step_handler(msg, send_2)

	else:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
		connection.commit()
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def send_2_2(message):
	sms_momerrr = message.text
	if message.text != '–û—Ç–º–µ–Ω–∞':

		qiwi_user = qiwi_user = message.text
		if qiwi_user[:1] == '7' and len(qiwi_user) == 11 or qiwi_user[:3] == '380' and len(qiwi_user[3:]) == 9 or qiwi_user[:3] == '375' and len(qiwi_user) <= 12:
			
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()

			q.execute("SELECT rules_1 FROM ugc_users  where id = "+str(message.chat.id))
			sms_prace = q.fetchone()

			q.execute("SELECT numer FROM statistika  where id = "+str(1))
			numer = q.fetchone()

			q.execute(f"SELECT text FROM sms_temp where id = {message.chat.id}")
			text_sms = q.fetchone()

			q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
			check_balans = q.fetchone()

			if float(check_balans[0]) >= int(sms_prace[0]):
				bot.send_message(message.chat.id, '‚ôªÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è—é, –æ–∂–∏–¥–∞–π—Ç–µ.', reply_markup=keyboards.main)
				q.execute("update ugc_users set balans = balans - "+str(sms_prace[0])+" where id = " + str(message.chat.id))
				connection.commit()
				q.execute("update statistika set balans_user = balans_user -" + str(sms_prace[0]) +  " where id =" + str(1))
				connection.commit()
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				texttttt = f'''{sms_momerrr}'''
				q.execute("INSERT INTO logi (id,text) VALUES ('%s', '%s')"%(message.chat.id,texttttt))
				connection.commit()
				try:

					r = requests.get(f'https://zvonok.com/manager/cabapi_external/api/v1/phones/call/?campaign_id={id_compani_prozvon}&phone=%2B{sms_momerrr}&public_key={api_prozvon}&text={text_sms}')
					data = json.loads(r.text)
					print(data['call_id'])
					q.execute("INSERT INTO logi (id,text) VALUES ('%s', '%s')"%(message.chat.id,message.chat.id))
					connection.commit()

					q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
					connection.commit()
					q.execute("update statistika set sms_good = sms_good +" + str(1) +  " where id =" + str(1))
					connection.commit()
					bot.send_message(-1001147741701, f'''#–ù–æ–≤—ã–π–ü—Ä–æ–∑–≤–æ–Ω: <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a> 

{text_sms[0]}


{r.text}'''



, parse_mode='HTML')
					keyboard = types.InlineKeyboardMarkup(row_width=1)
					keyboard.add(types.InlineKeyboardButton(text=f'üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ —Å–µ—Ä–≤–∏—Å–µ',callback_data='fead_10'))
					bot.send_message(message.chat.id, '‚ö†Ô∏è –û—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–∑—ã–≤ –æ —Å–µ—Ä–≤–∏—Å–µ:', reply_markup=keyboard)
					bot.send_message(message.chat.id, f'''‚úÖ –ü—Ä–æ–∑–≤–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.
‚ÑπÔ∏è ID: <code>{data['call_id']}</code> ''',parse_mode='HTML', reply_markup=keyboards.main)

					#connection = sqlite3.connect('database.sqlite')
					#q = connection.cursor()
					#q.execute("SELECT * FROM reklama")
					#row = q.fetchall()
					#text = ''
					#keyboard = types.InlineKeyboardMarkup()
					#for i in row:
					#	text = f'{text}<a href="{i[2]}">{i[1]}</a>\n‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ\n'
					#keyboard.add(types.InlineKeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='buy_reklama'))
					#bot.send_message(message.chat.id, f'''<b>üíé –†–µ–∫–ª–∞–º–∞:</b>

#{text}
#''' ,parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("update statistika set sms_send = sms_send +" + str(1) +  " where id =" + str(1))
					connection.commit()

				except:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("update ugc_users set balans = balans + "+str(sms_prace[0])+" where id = " + str(message.chat.id))
					connection.commit()
					q.execute("update statistika set balans_user = balans_user +" + str(sms_prace[0]) +  " where id =" + str(1))
					connection.commit()
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
					connection.commit()
					bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ú—ã —É–∂–µ –∑–Ω–∞–µ–º –∏ —Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É.')
					bot.send_message(config.admin, '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.')

			else:
				bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

		else: 
			msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è:')
			bot.register_next_step_handler(msg, send_1)

	else:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
		connection.commit()
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def probiv_number(message):
	sms_momerrr = message.text
	if message.text != '–û—Ç–º–µ–Ω–∞':

		qiwi_user = qiwi_user = message.text
		if qiwi_user[:1] == '7' and len(qiwi_user) == 11 or qiwi_user[:3] == '380' and len(qiwi_user[3:]) == 9 or qiwi_user[:3] == '375' and len(qiwi_user) <= 12:
			try:
				r = requests.get(f"https://auth.terasms.ru/outbox/network_lookup/?login=popevel845@farmdeu.com&password=BFFMX6P7SP&target={message.text}")
				data = json.loads(r.text)
				operator = str(data['rs_data']['owner_id'])
				region = str(data['rs_data']['region_name'])
				time_r = str(data['rs_data']['time_in_network_region'])
				numbers = f'+{message.text}'
				bot.send_message(message.chat.id, f'''<b> üîé –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:</b>

<i>–ù–æ–º–µ—Ä:</i> <code>{numbers}</code>
<i>–û–ø–µ—Ä–∞—Ç–æ—Ä:</i> <code>{operator}</code>
<i>–†–µ–≥–∏–æ–Ω:</i> <code>{region}</code>
<i>–ú–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è:</i> <code>{time_r}</code>''', parse_mode='HTML', reply_markup=keyboards.main)
			
			except:
				bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ú—ã —É–∂–µ –∑–Ω–∞–µ–º –∏ —Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É.', reply_markup=keyboards.main)
				bot.send_message(config.admin, '–û—à–∏–±–∫–∞ –ø—Ä–æ–±–∏–≤–∞.', reply_markup=keyboards.admin)

		else: 
			bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞, –Ω–æ–º–µ—Ä —É–∫–∞–∑–∞–Ω –Ω–µ –≤–µ—Ä–Ω–æ', reply_markup=keyboards.main)

	else:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute('DELETE FROM sms_temp WHERE id = '+ str(message.chat.id))
		connection.commit()
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def poisk_status(message):
	id_number = message.text
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			rust = requests.get(f'https://zvonok.com/manager/cabapi_external/api/v1/phones/call_by_id/?public_key={api_prozvon}&call_id={id_number}')
			data = json.loads(rust.text)
			get_status = str(data[0]['status'])
			stats = {'attempts_exc':'–ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å','compl_finished':'–ó–∞–∫–æ–Ω—á–µ–Ω —É–¥–∞—á–Ω–æ','compl_nofinished':'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç','deleted':'–£–¥–∞–ª—ë–Ω –∏–∑ –ø—Ä–æ–∑–≤–æ–Ω–∞','duration_error':'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–∞','expires':'–ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∑–≤–æ–Ω–∫–∞','novalid_button':'–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –∫–Ω–æ–ø–∫–∞','no_provider':'–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞','interrupted':'–ü—Ä–µ—Ä–≤–∞–Ω –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º','in_process':'–í –ø—Ä–æ—Ü–µ—Å—Å–µ','pincode_nook':'–ü–∏–Ω–∫–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π','pincode_ok':'–ü–∏–Ω–∫–æ–¥ –≤–µ—Ä–Ω—ã–π','synth_error':'–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–æ–ª–∏–∫–∞','user':'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π IVR'}  
			answer = stats.get(get_status)
			if get_status == 'compl_finished':
				get_doc = str(data[0]['recorded_audio'])
				doc = get_doc
				print(doc)
				bot.send_document(message.chat.id, doc , reply_markup=keyboards.main)
				bot.send_message(message.chat.id, f'{answer}', reply_markup=keyboards.main)

			else:
				bot.send_message(message.chat.id, f'{answer}', reply_markup=keyboards.main)#connection = sqlite3.connect('database.sqlite')
					#q = connection.cursor()
					#q.execute("SELECT * FROM reklama")
					#row = q.fetchall()
					#text = ''
					#keyboard = types.InlineKeyboardMarkup()
					#for i in row:
					#	text = f'{text}<a href="{i[2]}">{i[1]}</a>\n‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ\n'
					#keyboard.add(types.InlineKeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='buy_reklama'))
					#bot.send_message(message.chat.id, f'''<b>üíé –†–µ–∫–ª–∞–º–∞:</b>

#{text}
#''' ,parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)

		except:
				bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞.')

	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def poisk_status_sms(message):
	id_number = message.text
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			r = requests.post(f"https://gateway.sms77.io/api/status?p=—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã&msg_id={message.text}")
			otvet = r.text
			status_sms = otvet.split('\n')[0]
			get_status = str(status_sms)
			stats = {'DELIVERED':'SMS –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ','NOTDELIVERED':'SMS –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è.','BUFFERED':'SMS –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –Ω–æ SMSC –±—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–ª –µ–≥–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç','TRANSMITTED':'SMS –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ SMSC –∏ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–±—ã—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è','ACCEPTED':'SMS –±—ã–ª –ø—Ä–∏–Ω—è—Ç SMSC','EXPIRED':'SMS –Ω–µ –±—ã–ª–æ –ø–æ–ª—É—á–µ–Ω–æ –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è','REJECTED':'SMS –±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–æ–º','FAILED':'–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å','UNKNOWN':'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏'}  
			answer = stats.get(get_status)
			bot.send_message(message.chat.id, f'{answer}', reply_markup=keyboards.main)

		except:
				bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞.', reply_markup=keyboards.main)

	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)
@bot.callback_query_handler(func=lambda call:True)
def podcategors(call):

	if call.data[:12] == 'awhat_oplata':
		what_oplata = types.InlineKeyboardMarkup(row_width=2)
		what_oplata_qiwi = types.InlineKeyboardButton(text='ü•ù Qiwi', callback_data='Depoziit_qiwi')
		what_oplataa_crypta = types.InlineKeyboardButton(text='üí≤ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', callback_data='crypt_oplata')
		what_oplataa_btc = types.InlineKeyboardButton(text='üéÅ BTC –ß–ï–ö', callback_data='btc_oplata')
		what_oplata.add(what_oplata_qiwi,what_oplataa_crypta,what_oplataa_btc)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT * FROM reklama")
		row = q.fetchall()
		#text = ''
		#keyboard = types.InlineKeyboardMarkup()
		#for i in row:
			#text = f'{text}<a href="{i[2]}">{i[1]}</a>\n‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ\n'
		#keyboard.add(types.InlineKeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å —Å—Å—ã–ª–∫—É',callback_data='buy_reklama'))
		#bot.send_message(call.message.chat.id, f'''<b>üíé –†–µ–∫–ª–∞–º–∞:</b>

#{text}
#''' ,parse_mode='HTML', reply_markup=keyboard,disable_web_page_preview = True)
		bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞', reply_markup=what_oplata)

	if call.data == 'crypt_oplata':
		bot.send_message(call.from_user.id,  'üëÅ‚Äçüó® –í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ')

	if call.data[:12] == 'btc_oplata':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.from_user.id,  'üëÅ‚Äçüó® –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\nüíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - 100 —Ä—É–±', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, btc_oplata)


	if call.data[:13] == 'Depoziit_qiwi':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å',callback_data='Check_Depozit_qiwi_'))
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT qiwi_phone FROM config where id = '1'")
		qiwi_phone = q.fetchone()
		qiwi_oplata_url = "https://qiwi.com/payment/form/99?extra['account']="+str(qiwi_phone[0])+"&extra['comment']="+str(call.message.chat.id)+"&amountInteger=50&amountFraction=0&currency=643&blocked[1]=account&blocked[2]=comment"
		keyboard.add(types.InlineKeyboardButton(text='üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ',url=qiwi_oplata_url))
		bot.send_message(call.message.chat.id, "üì• <b>–î–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ QIWI –∫–æ—à–µ–ª—ë–∫, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—É–º–º—É —Å—Ä–µ–¥—Å—Ç–≤ (–º–∏–Ω–∏–º—É–º </b><code>100</code><b> —Ä—É–±) –Ω–∞ –Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–∏–∂–µ, –æ—Å—Ç–∞–≤–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–µ—Ä–µ–≤–æ–¥–∞:\n\nüí≥ –ù–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:</b> <code>%s</code>\nüí¨ <b>–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–µ—Ä–µ–≤–æ–¥—É:</b> <code>%s</code>" % (str(qiwi_phone[0]), str(call.message.chat.id)),parse_mode='HTML', reply_markup=keyboard)
		bot.send_message(call.message.chat.id, '‚ö†Ô∏è  –î–µ–ø–æ–∑–∏—Ç –º–µ–Ω—å—à–µ 100—Ä = –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–æ–µ–∫—Ç—É !')

	if call.data[:19] == 'Check_Depozit_qiwi_':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT qiwi_phone FROM config where id = 1")
		qiwi_phone = str(q.fetchone()[0])
		q.execute("SELECT qiwi_token FROM config where id = 1")
		qiwi_token = str(q.fetchone()[0])
		for payment in Qiwi(qiwi_token,qiwi_phone).get_payments(10, operation=OperationType.IN):
			q = q.execute('SELECT id FROM temp_pay WHERE txnid = ' + str(payment.raw['txnId']))
			temp_pay = q.fetchone()
			if 'RUB' in str(payment.currency) and str(payment.comment) == str(call.message.chat.id) and temp_pay == None and float(payment.amount) >= 100:
				q.execute("INSERT INTO temp_pay (txnid) VALUES ('%s')"%(payment.raw['txnId']))
				connection.commit()
				bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("update ugc_users set balans = balans + "+str(payment.amount)+" where id = " + str(call.message.chat.id))
				connection.commit()
				
				today = datetime.datetime.today()
				q.execute("INSERT INTO ugc_buys (idtovar,nametovar,date,data,userid,username,colvo,price,bot_name) VALUES ('%s','%s','%s','%s','%s','%s','%s','%s','%s')"%('2124','afawf',today.strftime("%H:%M %d.%m.%Y"),'2124',call.message.chat.id,str(call.message.chat.first_name),'1',str(payment.amount), '212asas4'))
				connection.commit()
				q.execute("select ref from ugc_users where Id = " + str(call.message.chat.id))
				ref_user1 = q.fetchone()[0]
				if ref_user1 != '':
					add_deposit = int(payment.amount) / 100 * 5
					q.execute("update ugc_users set balans = balans + "+str(add_deposit)+" where id =" + str(ref_user1))
					connection.commit()
					bot.send_message(ref_user1, f'–†–µ—Ñ–µ—Ä–∞–ª –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –∏ –≤–∞–º –∑–∞—á–∏—Å–ª–∏–Ω–Ω–æ {add_deposit} RUB',parse_mode='HTML')

				bot.send_message(config.admin, "<b>–ù–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç!</b>\nId –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + str(call.message.chat.id)+"\n–°—É–º–º–∞: " + str(payment.amount),parse_mode='HTML')
				bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ "+str(payment.amount) +' —Ä—É–±')
				break
			else:
				bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

	elif call.data == 'edit_praces':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT rules FROM ugc_users  where id = "+str(call.message.chat.id))
		sms_prace = q.fetchone()
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()

		keyboard.add(types.InlineKeyboardButton(text=f'VIP | 1000—Ä',callback_data='vip_1'),types.InlineKeyboardButton(text=f'Premium | 10000—Ä',callback_data='vip_3'))
		keyboard.add(types.InlineKeyboardButton(text=f'VIP+ | 5000—Ä',callback_data='vip_2'),types.InlineKeyboardButton(text=f'Premium+ | 30000—Ä',callback_data='vip_4'))
		bot.send_message(call.message.chat.id, f'''‚ûñ VIP: —Ü–µ–Ω–∞ —Å–º—Å 12—Ä
‚ûñ VIP+: —Ü–µ–Ω–∞ —Å–º—Å 10—Ä
‚ûñ Premium: —Ü–µ–Ω–∞ —Å–º—Å 7—Ä
‚ûñ Premium+: —Ü–µ–Ω–∞ —Å–º—Å 5—Ä

‚ö†Ô∏è –í—Å–µ —Ç–∞—Ä–∏—Ñ—ã –ø–æ–¥–∫–ª—é—á–∞—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ —Å—á–µ—Ç—É.''' ,parse_mode='HTML', reply_markup=keyboard)

	elif call.data == 'vip_1':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(1000):
			q.execute("update ugc_users set rules = " + str(12) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == 'vip_2':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(5000):
			q.execute("update ugc_users set rules = " + str(10) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == 'vip_3':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(10000):
			q.execute("update ugc_users set rules = " + str(7) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == 'vip_4':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(30000):
			q.execute("update ugc_users set rules = " + str(5) +  " where id =" + str(call.message.chat.id))
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ç–∞—Ä–∏—Ñ")

		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")

	elif call.data == '—à–∞–±–ª–æ–Ω—ã':
			bot.send_message(call.message.chat.id, f'''–ê–≤–∏—Ç–æ.—Ä—É —Å—Å—ã–ª–∫–∞ –ø—Ä—è–º–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:

–í–∞—à —Ç–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω! –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏:

–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–¥–µ–ª–∫—É —Å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º:

–£–∫–∞–∂–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥/—Å:

–í–∞—à —Ç–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω! –°—Å—ã–ª–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å–¥–µ–ª–∫–∏:

–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:

–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞:

–ü–æ–∫—É–ø–∫–∞ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å–¥–µ–ª–∫—É:

–ù–∞ –í–∞—à–µ –∏–º—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Ññ7542916.
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –æ–ø–ª–∞—Ç–∞:

–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞! –°—Å—ã–ª–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤:

–í–∞—à —Ç–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω! –ü–æ–ª—É—á–∏—Ç–µ –¥–µ–Ω—å–≥–∏ —Å –ø—Ä–æ–¥–∞–∂–∏:''' ,parse_mode='HTML')


	elif call.data == '—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup(row_width=1)
		keyboard.add(types.InlineKeyboardButton(text='üî∏ Life | 0—Ä',callback_data=f'—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ª–∏—Ñ–µ'),types.InlineKeyboardButton(text='üîπ Premium | 5—Ä',callback_data=f'—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ø—Ä–µ–º–∏—É–º'))
		bot.send_message(call.message.chat.id, '''<b>‚ôªÔ∏è –ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:</b> 

üîπ Premium:		
<code>0Ô∏è‚É£ https://oplata.uno/2ywn1
1Ô∏è‚É£ https://oplata.live/l559d
2Ô∏è‚É£ https://dostavka.uno/ssgkw</code>
üî∏ Life:
<code>0Ô∏è‚É£ https://goo.su/1lOQ
1Ô∏è‚É£ https://bitly.su/sdiEJ
2Ô∏è‚É£ https://rebrand.ly/ceeisa5
3Ô∏è‚É£ https://uni.su/wmXfbU
4Ô∏è‚É£ https://is.gd/2V8Nnu
5Ô∏è‚É£ https://v.gd/iaG6sd</code>
''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data == '—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ª–∏—Ñ–µ':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>https://yandex.ru/</code>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,generator_url)

	elif call.data == '—Å–æ–∫—Ä–∞—Ç–∏—Ç—å_—Å—Å—ã–ª–∫—É_–ø—Ä–µ–º–∏—É–º':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(5):
			msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>https://yandex.ru/</code>',parse_mode='HTML', reply_markup=keyboards.otmena)
			bot.register_next_step_handler(msg,generator_url_1)
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data[:14] == '–Ω–∞–ø–∏—Å–∞—Ç—å—é–∑–µ—Ä—É_':
		global iduserasend
		iduserasend = call.data[14:]
		msg=bot.send_message(call.message.chat.id, f'<b>–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, adminsendmessage)

	elif call.data == 'svoi_text':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b> \n\n–ú–∞–∫—Å–∏–º—É–º 120 —Å–∏–º–≤–æ–ª–æ–≤',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,svoi_text)

	elif call.data == 'svoi_text_prozvon':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b> \n\n–ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,svoi_text_prozvon)

	elif call.data == '—É–∑–Ω–∞—Ç—å_—Å—Ç–∞—Ç—É—Å':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ id –∑–≤–æ–Ω–∫–∞:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,poisk_status)

	elif call.data == '—É–∑–Ω–∞—Ç—å_—Å—Ç–∞—Ç—É—Å_sms':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ id —Å–º—Å:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,poisk_status_sms)

	elif call.data[:16] == 'good_oplata_btc_':
		global user_id_balance
		user_id_balance = call.data[16:]
		#bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,user_id_balance11)

	elif call.data == "vau":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚ûï –°–æ–∑–¥–∞—Ç—å',callback_data=f'vau_add'),types.InlineKeyboardButton(text=' ‚úîÔ∏è –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'vau_good'))
		bot.send_message(call.message.chat.id, "<b>–ß—Ç–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?</b>",parse_mode='HTML', reply_markup=keyboard)


	elif call.data == "vau_add":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT balans FROM ugc_users where id is " + str(call.message.chat.id))
		balanss = q.fetchone()
		msg = bot.send_message(call.message.chat.id, f'''–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É RUB –≤—ã–ø–∏—Å–∞—Ç—å –í–∞—É—á–µ—Ä ? (–ï–≥–æ —Å–º–æ–∂–µ—Ç –æ–±–Ω–∞–ª–∏—á–∏—Ç—å –ª—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∑–Ω–∞—é—â–∏–π –∫–æ–¥).

–î–æ—Å—Ç—É–ø–Ω–æ: {balanss[0]} RUB''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, vau_add)

	elif call.data == "vau_good":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '''–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞—É—á–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–æ–¥:''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, vau_good)

	elif call.data == "–ø—Ä–æ–±–∏—Ç—å_–Ω–æ–º–µ—Ä":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '''<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä:\n\n–ü—Ä–∏–º–µ—Ä:</b> <code>79999999999</code>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, probiv_number)

	elif call.data[:16] == 'restart':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		bot.send_message(call.message.chat.id,f'üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)


	elif call.data == 'buy_reklama':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'‚úîÔ∏è –°–æ–≥–ª–∞—Å–µ–Ω, –∫—É–ø–∏—Ç—å| 500 RUB',callback_data=f'yes_buy_reklama'))
		bot.send_message(call.message.chat.id, '''<b>–í –≤–∏—Ç—Ä–∏–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è 5 –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.
–î–æ–±–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞, –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –ø–µ—Ä–≤–æ–π, –∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞.

–°—Å—ã–ª–∫—É —É–≤–∏–¥—è—Ç:
‚ûñ–í –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ. 
‚ûñ–ü—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–µ. 
‚ûñ–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π. 
‚ûñ–í –≤—ã–±–æ—Ä–µ —Å–µ—Ä–≤–∏—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.</b>''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data == 'yes_buy_reklama':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏:</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, yes_buy_reklama)

	elif call.data == "–∞–≤–∏—Ç–æ_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=av&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data == "—Ç–µ–ª–µ–≥—Ä–∞–º_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=tg&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data == "–≤–∞—Ç—Å–∞–ø_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=wa&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')


	if call.data[:15] == '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT statys FROM ugc_users where id = "+ str(call.data[15:]))
		roww = q.fetchone()[0]
		if roww == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω':
			q.execute(f"update ugc_users set statys = '–ê–∫—Ç–∏–≤–µ–Ω' where id = {call.data[15:]}")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
			connection.close()

		else:
			bot.answer_callback_query(callback_query_id=call.id, text="‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

	if call.data[:14] == '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT statys FROM ugc_users where id = "+ str(call.data[14:]))
		roww = q.fetchone()[0]
		if roww == '–ê–∫—Ç–∏–≤–µ–Ω':
			q.execute(f"update ugc_users set statys = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' where id = {call.data[14:]}")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
			connection.close()

		else:
			bot.answer_callback_query(callback_query_id=call.id, text="‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

	elif call.data == "–≤–∏–±–µ—Ä_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=vi&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data == "—é–ª–∞_—Å–º—Å":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		q.execute("SELECT rules FROM config  where id = "+str(1))
		prace_smska = q.fetchone()
		if float(check_balans[0]) >= float(prace_smska[0]):
			keyboard = types.InlineKeyboardMarkup()
			try:
				r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getNumber&service=ym&country=0')
				ok_number = r.text
				idregasms = ok_number.split(':')[1]
				nomerregasms = ok_number.split(':')[2]
				keyboard.add(types.InlineKeyboardButton(text=f'‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–º—Å',callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_{idregasms}'))
				keyboard.add(types.InlineKeyboardButton(text=f'‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_{idregasms}'))
				bot.send_message(call.message.chat.id, f'''<b>–ù–æ–º–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b><code>{nomerregasms}</code>''',parse_mode='HTML', reply_markup=keyboard)
			except:
					bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞. –ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.')
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	elif call.data[:14] == '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–º—Å_':
		id_sms_number = call.data[14:]
		r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getStatus&id={id_sms_number}')
		ok_number = r.text
		pracesms = 5
		if str(ok_number.split(':')[0]) == 'STATUS_OK':
			smsgoodnumber = ok_number.split(':')[1]
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute("SELECT rules FROM config  where id = "+str(1))
			prace_smska = q.fetchone()
			q.execute(f"update ugc_users set balans = balans - {prace_smska[0]} where id = {call.message.chat.id}")
			connection.commit()
			bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
			r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=getBalance')
			balance_sms = r.text
			bot.send_message(-1001147741701, f'''#–°–ú–°–ê–ö–¢–ò–í–ê–¶–ò–Ø: #{call.message.chat.id} <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a>

{balance_sms}''', parse_mode='HTML')
			bot.send_message(call.message.chat.id, f'<b>–£—Å–ø–µ—à–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è:</b> <code>{smsgoodnumber}</code>',parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–û–∂–∏–¥–∞–Ω–∏–µ —Å–º—Å")

	elif call.data[:13] == '–æ—Ç–º–µ–Ω–∏—Ç—å_—Å–º—Å_':
		id_sms_number = call.data[13:]
		r = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key=0d42f73ce0b93510eb4cdA81Adc6b5ce&action=setStatus&status=8&id={id_sms_number}')
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–ù–æ–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")

	elif call.data[:17] == 'admin_search_user':
		msg = bot.send_message(call.message.chat.id, f'<b>–í–≤–µ–¥–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n(–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ –±–µ–∑ @)</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,searchuser)

	elif call.data == 'fead_10':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '''<b>‚úîÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤:

‚ö†Ô∏è –ú–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤.</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,fead_10)

	elif call.data == '–ø—Ä–æ–∫—Å–∏':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ http',callback_data=f'http'))
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ socks4',callback_data=f'socks4'))
		keyboard.add(types.InlineKeyboardButton(text=f'üîπ socks5',callback_data=f'socks5'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–∫—Å–∏:</b>''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data == 'http':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		pr1 = 'RU:http'
		pr2 = 'UA:http'
		pr3 = ':http'
		pr11 = requests.get("https://proxy1337.com/proxy.php?type=http&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=RU")
		colvo_ru = len(pr11.text.splitlines())
		pr22 = requests.get("https://proxy1337.com/proxy.php?type=http&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=UA")
		colvo_ua = len(pr22.text.splitlines())
		pr33 = requests.get("https://proxy1337.com/proxy.php?type=http&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=")
		colvo = len(pr33.text.splitlines())
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üá∑üá∫ –†–æ—Å—Å–∏—è | {colvo_ru} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr1}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞ | {colvo_ua} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr2}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üåê –í–µ—Å—å –º–∏—Ä | {colvo} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr3}'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ø—Ä–æ–∫—Å–∏'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:
			
üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å 1 –≤—ã–∫–∞—á–∫–∏: 10—Ä

‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å</b>''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data == 'socks4':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		pr1 = 'RU:socks4'
		pr2 = 'UA:socks4'
		pr3 = ':socks4'
		pr11 = requests.get("https://proxy1337.com/proxy.php?type=socks4&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=RU")
		colvo_ru = len(pr11.text.splitlines())
		pr22 = requests.get("https://proxy1337.com/proxy.php?type=socks4&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=UA")
		colvo_ua = len(pr22.text.splitlines())
		pr33 = requests.get("https://proxy1337.com/proxy.php?type=socks4&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=")
		colvo = len(pr33.text.splitlines())
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üá∑üá∫ –†–æ—Å—Å–∏—è | {colvo_ru} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr1}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞ | {colvo_ua} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr2}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üåê –í–µ—Å—å –º–∏—Ä | {colvo} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr3}'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ø—Ä–æ–∫—Å–∏'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:
			
üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å 1 –≤—ã–∫–∞—á–∫–∏: 10—Ä

‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å</b>''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data == 'socks5':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		pr1 = 'RU:socks5'
		pr2 = 'UA:socks5'
		pr3 = ':socks5'
		pr11 = requests.get("https://proxy1337.com/proxy.php?type=socks5&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=RU")
		colvo_ru = len(pr11.text.splitlines())
		pr22 = requests.get("https://proxy1337.com/proxy.php?type=socks5&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=UA")
		colvo_ua = len(pr22.text.splitlines())
		pr33 = requests.get("https://proxy1337.com/proxy.php?type=socks5&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country=")
		colvo = len(pr33.text.splitlines())
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üá∑üá∫ –†–æ—Å—Å–∏—è | {colvo_ru} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr1}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞ | {colvo_ua} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr2}'))
		keyboard.add(types.InlineKeyboardButton(text=f'üåê –í–µ—Å—å –º–∏—Ä | {colvo} —à—Ç',callback_data=f'—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_{pr3}'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ø—Ä–æ–∫—Å–∏'))
		bot.send_message(call.message.chat.id, '''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:

üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å 1 –≤—ã–∫–∞—á–∫–∏: 10—Ä

‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å</b>''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:15] == '—Å–∫–∞—á–∞—Ç—å_–ø—Ä–æ–∫—Å–∏_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(call.message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(10):
			keyboard = types.InlineKeyboardMarkup()
			try:
				zapros_proxy = call.data[15:]
				print(zapros_proxy.split(':')[0])
				print(zapros_proxy.split(':')[1])
				proxyyy = requests.get(f"https://proxy1337.com/proxy.php?type={zapros_proxy.split(':')[1]}&speed=25000&key=38800255a8fb619821f843e81a7b89d1&country={zapros_proxy.split(':')[0]}")
				proxy = proxyyy.text
				doc = open(f'{call.message.chat.id}proxi_@{config.bot_name}.txt', 'w', encoding='utf8')
				doc.write(f'{proxy}\n')
				doc.close()
				doc = open(f'{call.message.chat.id}proxi_@{config.bot_name}.txt', 'rb')
				bot.send_document(call.from_user.id, doc)
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute(f"update ugc_users set balans = balans - 10 where id = {call.message.chat.id}")
				connection.commit()
				bot.send_message(call.message.chat.id, '‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É !', reply_markup=keyboards.main)
				bot.send_message(-1001147741701, f'''#–ü–û–ö–£–ü–ö–ê–ü–†–û–ö–°–ò: <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a>''', parse_mode='HTML')
			except:
				bot.send_message(call.message.chat.id, '‚ö† –û—à–∏–±–∫–∞', reply_markup=keyboards.main)
		else:
			bot.send_message(call.message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', reply_markup=keyboards.main)

	elif call.data[:14] == '–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–∞–π—Å_':
		global id_user_edit
		id_user_edit = call.data[14:]
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, edit_prace_2)

	elif call.data[:12] == '—Å–Ω—è—Ç—å–±–∞–ª–∞–Ω—Å_':
		global id_user_edit_bal1111
		id_user_edit_bal1111 = call.data[12:]
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, add_money2)

	elif call.data[:15] == '–¥–æ–±–∞–≤–∏—Ç—å–±–∞–ª–∞–Ω—Å_':
		global id_user_edit_bal1
		id_user_edit_bal1 = call.data[15:]
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, add_money2)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å—Ç–æ–∫–µ–Ω_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∫–∏–≤–∏: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_token)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å–Ω–æ–º–µ—Ä_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_phone)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å—Ü–µ–Ω–∞–ø—Ä–æ–∑–≤–æ–Ω_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_prozvon)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å—Ü–µ–Ω–∞—Å–º—Å_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_sms)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å–ø—Ä–∞–π—Å–ø—Ä–∏–µ–º–∞—Å–º—Å':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_sms_ppp)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å_api':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_prace_apii)

bot.polling(True)
